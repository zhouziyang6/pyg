<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供 -->
    <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://192.168.12.168:61616"/>
    </bean>


    <!--==================================================消费者1-->

    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
    <bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
        <property name="targetConnectionFactory" ref="targetConnectionFactory"/>
        <!-- 消费者标识 -->
        <property name="clientId" value="pinyougou-item-web-1"/><!--标识消费者1(消费者的名字)-->
    </bean><!--不用配置Template 因为不用发送消息-->

    <!--订阅模式，一对多的 -->
    <bean id="itemTopic" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg value="pinyougou_item_topic"/>
    </bean>

    <!-- messageListener实现类 -->
    <bean id="itemAuditMessageListener" class="com.pinyougou.item.activemq.listener.ItemAuditMessageListener"/>

    <!-- 配置一个jms监听容器 -->
    <bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/><!--管理 生产factory-->
        <property name="destination" ref="itemTopic"/><!--订阅者模式-->
        <property name="messageListener" ref="itemAuditMessageListener"/><!--实现类-->
        <!-- 消息持久化 -->
        <property name="subscriptionDurable" value="true"/>
        <!-- 消费者标识 -->
        <property name="clientId" value="pinyougou-item-web-1"/>
        <!-- 订阅者标识(与消费者标识符可以不一样；默认为监听器全限定名) -->
        <property name="durableSubscriptionName" value="pinyougou-item-web-1"/>
        <!-- 设置为发布/订阅模式 -->
        <property name="pubSubDomain" value="true"/>
        <!-- 是否开启事务 -->
        <property name="sessionTransacted" value="false"/>
        <!-- 客户端消息确认模式名称 -->
        <property name="sessionAcknowledgeModeName" value="CLIENT_ACKNOWLEDGE"/>
    </bean><!--需要接收消息 就要配置监听器-->



    <!--==================================================消费者2-->

    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
    <bean id="connectionFactory2" class="org.springframework.jms.connection.SingleConnectionFactory">
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
        <property name="targetConnectionFactory" ref="targetConnectionFactory"/>
        <!-- 消费者标识 -->
        <property name="clientId" value="pinyougou-item-web-2"/><!--标识消费者1(消费者的名字)-->
    </bean><!--不用配置Template 因为不用发送消息-->

    <!--审核的主题 -->
    <bean id="itemDeleteTopic" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg value="pinyougou_item_delete_topic"/>
    </bean>

    <!-- messageListener实现类 -->
    <bean id="itemDeleteMessageListener" class="com.pinyougou.item.activemq.listener.ItemDeleteMessageListener"/>

    <!-- 配置一个jms监听容器 -->
    <bean id="jmsContainer2" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory2"/><!--管理 生产factory-->
        <property name="destination" ref="itemDeleteTopic"/><!--模式-->
        <property name="messageListener" ref="itemDeleteMessageListener"/><!--实现类-->
        <!-- 消息持久化 -->
        <property name="subscriptionDurable" value="true"/>
        <!-- 消费者标识 -->
        <property name="clientId" value="pinyougou-item-web-2"/>
        <!-- 订阅者标识(与消费者标识符可以不一样；默认为监听器全限定名) -->
        <property name="durableSubscriptionName" value="pinyougou-item-web-2"/>
        <!-- 设置为发布/订阅模式 -->
        <property name="pubSubDomain" value="true"/>
        <!-- 是否开启事务 -->
        <property name="sessionTransacted" value="false"/>
        <!-- 客户端消息确认模式名称 -->
        <property name="sessionAcknowledgeModeName" value="CLIENT_ACKNOWLEDGE"/>
    </bean><!--需要接收消息 就要配置监听器-->

</beans>